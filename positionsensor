// Define motion sensor pins (adjust based on your sensor)
const int trigPin = 9;    // Trigger pin for ultrasonic sensor
const int echoPin = 10;   // Echo pin for ultrasonic sensor

// Known mass and gravitational acceleration (for calculating force)
const float mass = 0.5; // mass of the object in kg (adjust as needed)
const float g = 9.8;    // acceleration due to gravity (m/s^2)

void setup() {
  // Start serial communication for output
  Serial.begin(9600);

  // Initialize ultrasonic sensor pins
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  
  delay(1000);  // Give some time for the sensor to initialize
}

void loop() {
  // Trigger the ultrasonic sensor
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
  // Measure the duration of the echo pulse
  long duration = pulseIn(echoPin, HIGH);
  
  // Calculate the distance in cm (assuming a 340 m/s speed of sound)
  //343 m/s = 0.0343 cm/microsecond = 1/29.1 cm/microsecond
  float distance = (duration / 2.0) * 0.0344; // distance in cm
  
  // Convert distance from cm to meters
  float displacement = distance / 100.0;  // in meters
  
  // Calculate the force applied by the weight (F = m * g)
  float force = mass * g;  // Force in Newtons (N)
  
  // Calculate the spring constant k using Hooke's Law: F = k * x
  if (displacement != 0) {
    float springConstant = force / displacement;  // k = F / x
    
    // Output the spring constant and displacement
    Serial.print("Displacement: ");
    Serial.print(displacement);
    Serial.print(" meters, ");
    Serial.print("Spring Constant: ");
    Serial.print(springConstant);
    Serial.println(" N/m");
  } else {
    Serial.println("Error: No displacement detected.");
  }

  // Wait before the next measurement
  delay(1000);
}
